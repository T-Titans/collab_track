{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext(undefined);export const ThemeProvider=_ref=>{let{children}=_ref;const[isDark,setIsDark]=useState(false);useEffect(()=>{// Check if user has a theme preference in localStorage\nconst savedTheme=localStorage.getItem('theme');if(savedTheme==='dark'){setIsDark(true);}},[]);const toggleTheme=()=>{const newTheme=!isDark;setIsDark(newTheme);localStorage.setItem('theme',newTheme?'dark':'light');};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{isDark,toggleTheme},children:/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:isDark?'#111827':'#f8fafc',color:isDark?'#f9fafb':'#111827',minHeight:'100vh',transition:'all 0.3s ease'},children:children})});};export const useTheme=()=>{const context=useContext(ThemeContext);if(!context){throw new Error('useTheme must be used within a ThemeProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","undefined","ThemeProvider","_ref","children","isDark","setIsDark","savedTheme","localStorage","getItem","toggleTheme","newTheme","setItem","Provider","value","style","backgroundColor","color","minHeight","transition","useTheme","context","Error"],"sources":["C:/Users/USER/Documents/OWETHU_PEYANE/collab_track/frontend/src/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ninterface ThemeContextType {\r\n  isDark: boolean;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if user has a theme preference in localStorage\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme === 'dark') {\r\n      setIsDark(true);\r\n    }\r\n  }, []);\r\n\r\n  const toggleTheme = () => {\r\n    const newTheme = !isDark;\r\n    setIsDark(newTheme);\r\n    localStorage.setItem('theme', newTheme ? 'dark' : 'light');\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <div style={{ \r\n        backgroundColor: isDark ? '#111827' : '#f8fafc',\r\n        color: isDark ? '#f9fafb' : '#111827',\r\n        minHeight: '100vh',\r\n        transition: 'all 0.3s ease'\r\n      }}>\r\n        {children}\r\n      </div>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAO9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAA+BO,SAAS,CAAC,CAE3E,MAAO,MAAM,CAAAC,aAAsD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACjF,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAE3CC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAU,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAChD,GAAIF,UAAU,GAAK,MAAM,CAAE,CACzBD,SAAS,CAAC,IAAI,CAAC,CACjB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,QAAQ,CAAG,CAACN,MAAM,CACxBC,SAAS,CAACK,QAAQ,CAAC,CACnBH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAED,QAAQ,CAAG,MAAM,CAAG,OAAO,CAAC,CAC5D,CAAC,CAED,mBACEZ,IAAA,CAACC,YAAY,CAACa,QAAQ,EAACC,KAAK,CAAE,CAAET,MAAM,CAAEK,WAAY,CAAE,CAAAN,QAAA,cACpDL,IAAA,QAAKgB,KAAK,CAAE,CACVC,eAAe,CAAEX,MAAM,CAAG,SAAS,CAAG,SAAS,CAC/CY,KAAK,CAAEZ,MAAM,CAAG,SAAS,CAAG,SAAS,CACrCa,SAAS,CAAE,OAAO,CAClBC,UAAU,CAAE,eACd,CAAE,CAAAf,QAAA,CACCA,QAAQ,CACN,CAAC,CACe,CAAC,CAE5B,CAAC,CAED,MAAO,MAAM,CAAAgB,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAG1B,UAAU,CAACK,YAAY,CAAC,CACxC,GAAI,CAACqB,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}