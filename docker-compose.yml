version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: collabtrack-db
    environment:
      POSTGRES_DB: collabtrack
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - collabtrack-network

  # Backend API
  backend:
    build: ./backend
    container_name: collabtrack-backend
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/collabtrack?schema=public
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      PORT: 5000
      NODE_ENV: development
      FRONTEND_URL: http://localhost:3000
      MAX_FILE_SIZE: 10485760
      UPLOAD_PATH: ./uploads
    ports:
      - "5000:5000"
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      - postgres
    networks:
      - collabtrack-network
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npm run seed &&
        npm run dev
      "

  # Frontend (for development)
  frontend:
    build: .
    container_name: collabtrack-frontend
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - collabtrack-network
    command: npm start

volumes:
  postgres_data:

networks:
  collabtrack-network:
    driver: bridge
